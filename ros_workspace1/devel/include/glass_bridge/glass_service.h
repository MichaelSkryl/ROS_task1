// Generated by gencpp from file glass_bridge/glass_service.msg
// DO NOT EDIT!


#ifndef GLASS_BRIDGE_MESSAGE_GLASS_SERVICE_H
#define GLASS_BRIDGE_MESSAGE_GLASS_SERVICE_H

#include <ros/service_traits.h>


#include <glass_bridge/glass_serviceRequest.h>
#include <glass_bridge/glass_serviceResponse.h>


namespace glass_bridge
{

struct glass_service
{

typedef glass_serviceRequest Request;
typedef glass_serviceResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct glass_service
} // namespace glass_bridge


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::glass_bridge::glass_service > {
  static const char* value()
  {
    return "cb66fc01ceb7c6ac62872c559febe866";
  }

  static const char* value(const ::glass_bridge::glass_service&) { return value(); }
};

template<>
struct DataType< ::glass_bridge::glass_service > {
  static const char* value()
  {
    return "glass_bridge/glass_service";
  }

  static const char* value(const ::glass_bridge::glass_service&) { return value(); }
};


// service_traits::MD5Sum< ::glass_bridge::glass_serviceRequest> should match
// service_traits::MD5Sum< ::glass_bridge::glass_service >
template<>
struct MD5Sum< ::glass_bridge::glass_serviceRequest>
{
  static const char* value()
  {
    return MD5Sum< ::glass_bridge::glass_service >::value();
  }
  static const char* value(const ::glass_bridge::glass_serviceRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::glass_bridge::glass_serviceRequest> should match
// service_traits::DataType< ::glass_bridge::glass_service >
template<>
struct DataType< ::glass_bridge::glass_serviceRequest>
{
  static const char* value()
  {
    return DataType< ::glass_bridge::glass_service >::value();
  }
  static const char* value(const ::glass_bridge::glass_serviceRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::glass_bridge::glass_serviceResponse> should match
// service_traits::MD5Sum< ::glass_bridge::glass_service >
template<>
struct MD5Sum< ::glass_bridge::glass_serviceResponse>
{
  static const char* value()
  {
    return MD5Sum< ::glass_bridge::glass_service >::value();
  }
  static const char* value(const ::glass_bridge::glass_serviceResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::glass_bridge::glass_serviceResponse> should match
// service_traits::DataType< ::glass_bridge::glass_service >
template<>
struct DataType< ::glass_bridge::glass_serviceResponse>
{
  static const char* value()
  {
    return DataType< ::glass_bridge::glass_service >::value();
  }
  static const char* value(const ::glass_bridge::glass_serviceResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // GLASS_BRIDGE_MESSAGE_GLASS_SERVICE_H
